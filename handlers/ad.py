from aiogram import types

from bot import dp, bot, user_states
from modules import database


@dp.callback_query_handler(lambda call: call.data == 'send_message')
async def send_message(call: types.CallbackQuery):
    user_id = call.from_user.id
    user_states[user_id] = 'send_message'

    await call.message.edit_text('üìù *–†–∞—Å—Å—ã–ª–∫–∞*\n'
                                 'üîΩ _–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:_',
                                 parse_mode='Markdown')
    
    
@dp.message_handler(lambda message: user_states.get(message.from_user.id) == 'send_message', content_types=['text', 'photo'])
async def send_message_handler(message: types.Message):
    user_id = message.from_user.id
    user_states[user_id] = None

    users = await database.get_all_users()

    await message.answer('üì§ *"–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –≤—ã –±—É–¥–µ—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ...*', parse_mode='Markdown')

    success_count = 0
    error_count = 0

    if message.photo:
        for user in users:
            try:
                await bot.send_photo(user['user_id'], message.photo[-1].file_id, caption=message.caption)
                success_count += 1
            except:
                error_count += 1
    else:
        for user in users:
            try:
                await bot.send_message(user['user_id'], message.text)
                success_count += 1
            except:
                error_count += 1

    await message.answer('‚úÖ *–†–∞—Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!*\n\n'
                            f'üì§ *–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π:* {success_count}\n'
                            f'‚ùå *–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å:* {error_count}', parse_mode='Markdown')